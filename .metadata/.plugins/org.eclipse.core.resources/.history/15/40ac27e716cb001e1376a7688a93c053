package com.application.sevices;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Service;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

@Service

public class FileService<T> {
	private final String storageDirectory = "C:\\Users\\aryan\\OneDrive\\Desktop\\Car Rental Application\\CarRentalApplication\\fileStorage";
	private final Path rootLocation;
	private final ObjectMapper objectMapper = new ObjectMapper();

	public FileService() {
		this.rootLocation = Paths.get(storageDirectory).toAbsolutePath().normalize();
		try {
			Files.createDirectories(this.rootLocation);
		} catch (IOException e) {
			throw new RuntimeException("Could not initialize storage", e);
		}
	}

	public void saveData(List<T> data, String fileName) throws IOException {
		File file = this.rootLocation.resolve(fileName).toFile();
		objectMapper.writeValue(file, data);
	}

	public List<T> loadData(String fileName, TypeReference<List<T>> typeReference) throws IOException {
		File file = this.rootLocation.resolve(fileName).toFile();
		if (!file.exists()) {
			return new ArrayList<>();
		}
		return objectMapper.readValue(file, typeReference);
	}
}
